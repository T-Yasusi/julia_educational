function product_val(z::Complex, q::Complex; atol=1e-8, rtol=1e-8, Nmax)
    println("theta4 product value")
    n = 1
    sum = 0.0 + 0.0im
    while n <= Nmax
        a = 1 - q^(2n)
        b = 1 - 2*q^(2n-1)*cos(2*pi*z) + q^(4n-2)
        sum += log(a) + log(b)
        if abs(q^(2n)) < atol
            println("pruduct val ", exp(sum), sum)
            return exp(sum)
        end

        n += 1
    end
    error("theta4 did not converge within $Nmax terms in product value")
end
    
function theta4(z::Complex, tau::Complex; atol=1e-8, rtol=1e-8, Nmax = 1000)
    @assert imag(tau)>0 "theta function(z, tau) imag(tau) should be positive $tau"
    
    factor = 1
    q = exp(im*pi*tau)
#    println("input: z = ", z, "  tau = ", tau, "  q = ", q)

    # モジュラー変換
    if abs(q)>0.9
#        println("モジュラー変換 適応")
        factor = 1/sqrt(-im*tau) * exp(-pi*im*z^2/tau)
        z = z/tau
        tau = -1/tau
        q = exp(im*pi*tau)
#        println("z = ", z, "  tau = ", tau, "  q = ", q)
    end
    
    m = -floor(Int, imag(z)/imag(tau))
#    println("m = ", m)
    factor *= (-1)^m * exp(pi*im*m^2*tau+2*pi*im*m*z)
    z += m*tau

#    println("2. z = ", z, "  tau = ", tau, "  q = ", q)
#    println("n = ", floor(Int, real(z)))
    z -= floor(Int, real(z))
#    println("3. z = ", z, "  tau = ", tau, "  q = ", q)    
    
    s = 1.0 + 0.0im
#    println("term0 = ", s)
    n = 1
    while n <= Nmax
        a = (-1)^n * q^(n^2) 
        term = a * 2 * cos(2*n*pi*z)
        # if n == 1 && abs(term+s)<1e-5
        #     return factor*product_val(z, q, atol=atol, rtol=rtol, Nmax = Nmax)
        # end
        s_new = s + term
#        println("term = ", term)
#        println("s = ", s_new);
#        println("a = ", a, "  cos = ", cos(2*pi*n*z))
#        println("n = ", n, "  atol = ", abs(term), "  rtol = ", abs(term)/abs(s_new))
        
        if abs(term) < atol || abs(term)/abs(s_new) < rtol
#        if abs(term)/abs(s_new) < rtol
#            println("factor = ", factor, "  val = ", s_new)
            return factor*s_new
        end

        if isnan(s_new)
            break
        end
        s = s_new
        n += 1
    end

    error("theta1 did not converge within $Nmax terms")
end

export theta4
